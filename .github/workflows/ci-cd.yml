name: Full Stack CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install backend dependencies
        run: npm ci
      - name: Run backend tests
        run: npm test
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.19.0
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/backend:latest'

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install frontend dependencies
        run: npm ci
      - name: Run frontend tests
        run: npm test
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  deploy:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
      - name: Configure Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
      - name: Update Helm values with image tags
        run: |
          sed -i "s|image: backend:latest|image: ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest|g" devops/helm/values.yaml
          sed -i "s|image: frontend:latest|image: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest|g" devops/helm/values.yaml
      - name: Deploy with Helm
        run: |
          helm upgrade --install cloud-counselage devops/helm
